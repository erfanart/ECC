from flask import Flask, request
import os,json
import ast
import requests
import logging
from bot import send_alert
#from funcs import *
# Define the URL for your external request
url = 'https://rev.rcsis.ir/down/access'

# Initialize Flask application
app = Flask(__name__)

# Configure logging
logging.basicConfig(level=logging.INFO)
app.logger.setLevel(logging.INFO)

def read_file(filename):
    abs_path = os.path.join(os.path.dirname(__file__), filename)
    app.logger.info(f"Attempting to open file: {abs_path}")
    try:
        with open(abs_path, 'r') as file:
            template = file.read().strip()
            app.logger.info(f"File read successfully: {abs_path}")
            template = dict(json.loads(template)) 
            return template
    except FileNotFoundError:
        app.logger.error(f"File not found: {abs_path}")
        return None
def replace(content, address, port):
    return content.replace("{address}", address).replace("{port}", port)




def alert(detail):
    send_alert(detail)










@app.route('/', methods=['POST'])
def greet():
    data = request.get_json()
    if not data:
        app.logger.error("No JSON data received")
        return "Error: No JSON data received", 400

    uid = data.get('uid')
    if not uid:
        app.logger.error("UID not provided in the request")
        return "Error: UID not provided", 400

    uid_list = read_file('list.conf')
    if uid_list:
        detail = read_file(f'clients/{uid_list[uid]}.conf')
        if detail:
            try:
                alert(detail)
            except Exception as e:
                app.logger.info(e)

            response = requests.get(url)
            if response.status_code == 200:
                data = response.text
                app.logger.info(f'{detail["ip"]},{detail["port"]}')
                response_text = replace(data,detail["ip"], detail["port"])
                return response_text
            else:
                app.logger.error(f"Failed to retrieve data from {url}: {response.status_code}")
                return f"Failed to retrieve data: {response.status_code}", 500
        else:
            app.logger.error(f"Detail file not found for UID: {uid}")
            return "Error: Detail file not found", 404
    else:
        app.logger.error("UID list file not found")
        return "Error: UID list file not found", 404

if __name__ == '__main__':
    app.run()

